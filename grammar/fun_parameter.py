"""
为了说明一件事:
函数参数绑定的默认值，是绑定了一个引用，但是这个引用指向的值是可能会变的。
"""


def f(a, l=[]):
    for i in range(a):
        l.append(i)
    print(l)

# 刚开始 l 的值为 []
f(3)
# 后来 l 的值为 [0,1,2]
f(4)
# 其实 l 的值一直是同一个指向 list 的引用，这个引用从来没有变，变的是 引用指向的值


def f(a=0):
    a += 1
    print(a)

# 基本类型不是引用，直接就是值，所以一直都没有变
f()
f()


a = 1


def fun(a):
    a = 2


fun(a)
# 这个还是 a
print(a)

a = []


def fun(a):
    a.append(1)

fun(a)
# 已经变成 [1] 了
print(a)

"""
函数，方法参数值，是复制一份带进去的。如果是 list 那么复制的是引用，引用虽然不变，但是引用指向的值有可能变。上面的例子，
说的就是这个问题。
"""